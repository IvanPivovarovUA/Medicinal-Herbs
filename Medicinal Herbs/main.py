# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(805, 636)
        MainWindow.setStyleSheet("background-color:rgb(0,255,0);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QScrollBar{\n"
"    background:rgb(249, 231, 159);\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(160, 10, 501, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color:white;\n"
"border: 1px solid white;")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setStyleSheet("border: 2px solid rgb(249, 231, 159);\n"
"border-radius: 20px;\n"
"background-color:rgb(249, 231, 159);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        self.backButton.setGeometry(QtCore.QRect(10, 60, 191, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.backButton.setFont(font)
        self.backButton.setStyleSheet("background-color:rgb(249, 231, 159);")
        self.backButton.setObjectName("backButton")
        self.clearButton = QtWidgets.QPushButton(self.centralwidget)
        self.clearButton.setGeometry(QtCore.QRect(680, 10, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.clearButton.setFont(font)
        self.clearButton.setStyleSheet("background-color:rgb(249, 231, 159);")
        self.clearButton.setObjectName("clearButton")
        self.updateButton = QtWidgets.QPushButton(self.centralwidget)
        self.updateButton.setGeometry(QtCore.QRect(430, 60, 371, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.updateButton.setFont(font)
        self.updateButton.setStyleSheet("background-color:rgb(249, 231, 159);")
        self.updateButton.setObjectName("updateButton")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 110, 791, 491))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet("QListWidget{\n"
"    background: white;\n"
"}\n"
"QListWidget::item:hover{\n"
"    background:rgb(249, 231, 159);\n"
"}")
        self.listWidget.setObjectName("listWidget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 110, 791, 491))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("background-color:rgb(249, 231, 159);")
        self.textBrowser.setObjectName("textBrowser")
        self.loadingScreen = QtWidgets.QLabel(self.centralwidget)
        self.loadingScreen.setGeometry(QtCore.QRect(0, 0, 805, 636))
        font = QtGui.QFont()
        font.setPointSize(50)
        self.loadingScreen.setFont(font)
        self.loadingScreen.setAlignment(QtCore.Qt.AlignCenter)
        self.loadingScreen.setObjectName("loadingScreen")
        self.textBrowser.raise_()
        self.listWidget.raise_()
        self.lineEdit.raise_()
        self.label.raise_()
        self.backButton.raise_()
        self.clearButton.raise_()
        self.updateButton.raise_()
        self.loadingScreen.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 805, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Рецепти лікарських трав"))
        self.label.setText(_translate("MainWindow", "Пошук:"))
        self.backButton.setText(_translate("MainWindow", "<- Повернутися"))
        self.clearButton.setText(_translate("MainWindow", "Х Очистити"))
        self.updateButton.setText(_translate("MainWindow", "Оновити данні з https://liktravy.ua/"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:18pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:10px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.loadingScreen.setText(_translate("MainWindow", "Loading ..."))

    ########my code#############
    def my_ui_setup(self):
        self.backButton.clicked.connect(self.comeback_to_info)
        self.clearButton.clicked.connect(self.clear_lineEdit)
        self.updateButton.clicked.connect(self.download_update_info)

        self.lineEdit.textEdited.connect(self.user_is_search)
        self.listWidget.itemClicked.connect(self.user_clicked_item)

        self.textBrowser.hide()
        self.loadingScreen.hide()
        self.user_is_search()

        self.updateButton.setText("Оновити данні з " + myparser.URL_short)

    def download_update_info(self):
        print("download_update_info(self)")
        self.loadingScreen.show()
        self.potok = loading_potok()
        self.potok.start()

    def clear_lineEdit(self):#done
        print("self.clear_lineEdit()")
        self.lineEdit.clear()
        self.user_is_search()


    def comeback_to_info(self):#done
        print("self.comeback_to_info()")
        self.textBrowser.show()
        self.textBrowser.setFocus()
        self.listWidget.hide()
        _translate = QtCore.QCoreApplication.translate
        self.textBrowser.setHtml(_translate("MainWindow",data.HTML_CODE))
    def comeback_to_search(self):
        self.listWidget.show()
        self.textBrowser.hide()
    def user_is_search(self):#done
        print("self.user_is_search()")
        self.listWidget.clear()
        self.listWidget.addItems(
            data.finde_seems_titles(self.lineEdit.text())
        )
        self.listWidget.scrollToItem(self.listWidget.item(0))

    def user_clicked_item(self,key):
        print('self.user_clicked_item()')
        print(key.text())
        data.change_html_code(key.text())
        self.comeback_to_info()


    def user_clicked_lineEdit_test(self,old,new):
        print('self.user_clicked_lineEdit_test()',end=' ')
        if new == self.lineEdit:
            self.comeback_to_search()
            self.user_is_search() 
        else:
            print(False)
        print('widgets:',old,'->',new)
    ##############
####My code#######
from PyQt5.QtCore import QThread
class loading_potok(QThread):
    def __init__(self):
        QThread.__init__(self)
        print('loading init')
    def run(self):
        print('loading class run')
        test_result = myparser.load_site_info()
        
        if test_result:
            ui.loadingScreen.hide()
            data.set_info()
            print("hello world")
            ui.comeback_to_search()
            ui.user_is_search()
        else:
            ui.loadingScreen.setText('Error! Something \nis going wrong. \nClose program \nand try againe.')

        print('loading class end')
################

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    ###my code###
    import data
    import myparser
    data.set_info()
    ui.my_ui_setup()
    MainWindow.setFixedWidth(805)
    MainWindow.setFixedHeight(636)
    app.focusChanged.connect(ui.user_clicked_lineEdit_test)
    MainWindow.setWindowIcon(QtGui.QIcon('romashka.jpg'))
    #############

    sys.exit(app.exec_())